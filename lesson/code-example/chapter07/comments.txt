<!DOCTYPE html><html><head>    <!-- 页面meta -->    <meta charset="utf-8">    <meta http-equiv="X-UA-Compatible" content="IE=edge">    <title>基于SpringBoot的SSMP整合案例</title>    <meta content="width=device-width,initial-scale=1,maximum-scale=1,user-scalable=no" name="viewport">    <!-- 引入样式 -->    <link rel="stylesheet" href="../plugins/elementui/index.css">    <link rel="stylesheet" href="../plugins/font-awesome/css/font-awesome.min.css">    <link rel="stylesheet" href="../css/style.css"></head><body class="hold-transition"><div id="app">    <div class="content-header">        <h1>评论管理</h1>    </div>    <div class="app-container">        <div class="box">            <!--使用elementui中的输入框和按钮组件-->            <div class="filter-container">                <!--通过v-model实现数据双向绑定-->                <el-input placeholder="文章标题" v-model="pagination.title" style="width: 200px;"                          class="filter-item"></el-input>                <el-input placeholder="用户名" v-model="pagination.userName" style="width: 200px;"                          class="filter-item"></el-input>                <el-input placeholder="评论内容" v-model="pagination.content" style="width: 200px;"                          class="filter-item"></el-input>                <el-button @click="getAll()" class="dalfBut">查询</el-button>                <el-button type="primary" class="butT" @click="handleCreate()">新建</el-button>            </div>            <!--使用elementui中的表格组件-->            <el-table size="small" current-row-key="id" :data="dataList" stripe highlight-current-row>                <el-table-column type="index" align="center" label="序号"></el-table-column>                <!--绑定dataList.title、dataList.userName、dataList.content-->                <el-table-column prop="title" label="文章标题" align="center"></el-table-column>                <el-table-column prop="userName" label="用户名" align="center"></el-table-column>                <el-table-column prop="content" label="评论内容" align="center"></el-table-column>                <el-table-column label="操作" align="center">                    <template slot-scope="scope">                        <el-button type="primary" size="mini" @click="handleEdit(scope.row)">编辑</el-button>                        <el-button type="danger" size="mini" @click="handleDelete(scope.row)">删除</el-button>                    </template>                </el-table-column>            </el-table>            <!--使用elementui中的分页组件-->            <div class="pagination-container">                <el-pagination                        class="pagiantion"                        @current-change="handleCurrentChange"                        :current-page="pagination.currentPage"                        :page-size="pagination.pageSize"                        :total="pagination.total"                        layout="total, prev, pager, next, jumper">                </el-pagination>            </div>            <!-- “新建”标签弹层 -->            <div class="add-form">                <el-dialog title="新增评论" :visible.sync="dialogFormVisible4Add">                    <el-form ref="dataAddForm" :model="formData" :rules="rules" label-position="right"                             label-width="100px">                        <el-row>                            <el-col :span="12">                                <el-form-item label="文章ID" prop="aid">                                    <el-input v-model="formData.aid"/>                                </el-form-item>                            </el-col>                            <el-col :span="12">                                <el-form-item label="用户ID" prop="uid">                                    <el-input v-model="formData.uid"/>                                </el-form-item>                            </el-col>                        </el-row>                        <el-row>                            <el-col :span="24">                                <el-form-item label="评论内容">                                    <el-input v-model="formData.content" type="textarea"></el-input>                                </el-form-item>                            </el-col>                        </el-row>                    </el-form>                    <div slot="footer" class="dialog-footer">                        <el-button @click="cancel()">取消</el-button>                        <el-button type="primary" @click="handleAdd()">确定</el-button>                    </div>                </el-dialog>            </div>            <!-- “编辑”标签弹层 -->            <div class="add-form">                <el-dialog title="编辑检查项" :visible.sync="dialogFormVisible4Edit">                    <el-form ref="dataEditForm" :model="formData" :rules="rules" label-position="right"                             label-width="100px">                        <el-row>                            <el-col :span="12">                                <el-form-item label="文章ID" prop="aid">                                    <el-input v-model="formData.aid"/>                                </el-form-item>                            </el-col>                            <el-col :span="12">                                <el-form-item label="用户ID" prop="uid">                                    <el-input v-model="formData.uid"/>                                </el-form-item>                            </el-col>                        </el-row>                        <el-row>                            <el-col :span="24">                                <el-form-item label="评论内容">                                    <el-input v-model="formData.content" type="textarea"></el-input>                                </el-form-item>                            </el-col>                        </el-row>                    </el-form>                    <div slot="footer" class="dialog-footer">                        <el-button @click="cancel()">取消</el-button>                        <el-button type="primary" @click="handleUpdate()">确定</el-button>                    </div>                </el-dialog>            </div>        </div>    </div></div></body><!-- 引入组件库 --><script src="../js/vue.js"></script><script src="../plugins/elementui/index.js"></script><script type="text/javascript" src="../js/jquery.min.js"></script><script src="../js/axios-0.18.0.js"></script><script>    var vue = new Vue({        el: '#app',        data: {            dataList: [],                     //当前页要展示的列表数据            dialogFormVisible4Add: false,      //"新增"表单是否可见            dialogFormVisible4Edit: false,     //"编辑"表单是否可见            formData: {},    //表单数据            rules: {         //表单数据校验规则                uid: [{required: true, message: '用户ID为必填项', trigger: 'blur'}],                aid: [{required: true, message: '文章ID为必填项', trigger: 'blur'}]            },            pagination: {         //分页相关模型数据                currentPage: 1,   //当前页码                pageSize: 2,       //每页显示的记录数                total: 0,          //总记录数                title: "",        //分页查询实体条件                userName: "",     //分页查询实体条件                content: ""       //分页查询实体条件            }        },        //钩子函数，VUE对象初始化完成后自动执行        created() {            //调用查询全部数据的操作            this.getAll();        },        methods: {            //分页查询            getAll() {                //组织参数，拼接url请求地址                param = "?title=" + this.pagination.title;                param += "&userName=" + this.pagination.userName;                param += "&content=" + this.pagination.content;                //发送异步请求                axios.get("/comment/" + this.pagination.currentPage + "/" + this.pagination.pageSize + param).then((res) => {                    this.pagination.pageSize = res.data.data.size;					this.pagination.currentPage = res.data.data.current;					this.pagination.total = res.data.data.total;					this.dataList = res.data.data.records;                });            },            //切换页码            handleCurrentChange(currentPage) {                //修改页码值为当前选中的页码值                this.pagination.currentPage = currentPage;                //执行查询                this.getAll();            },			            //弹出"新建"窗口            handleCreate() {                this.dialogFormVisible4Add = true;                this.resetForm();            },			            //重置表单            resetForm() {                this.formData = {};            },            //确认添加            handleAdd() {                axios.post("/comment", this.formData).then((res) => {                    //判断当前操作是否成功                    if(res.data.flag){						//1.关闭弹层						this.dialogFormVisible4Add = false;						this.$message.success(res.data.msg);					}					else{						this.$message.error(res.data.msg);					}}).finally(() => {						//2.重新加载数据						this.getAll();				});            },            //取消            cancel() {                this.dialogFormVisible4Add = false;                this.dialogFormVisible4Edit = false;                this.$message.info("当前操作取消");            },            //弹出“编辑”窗口            handleEdit(row) {                // row.id为该行记录在原数据库表中的id                axios.get("/comment/" + row.id).then((res) => {                    if(res.data.flag && res.data.data != null){						//1.关闭弹层						this.dialogFormVisible4Edit = true;						this.formData = res.data.data;					}					else{						this.$message.error(res.data.msg);					}				}).finally(() => {                    //2.重新加载数据                    this.getAll();				});            },            //确认修改            handleUpdate() {                axios.put("/comment", this.formData).then((res) => {                    //判断当前操作是否成功                    if(res.data.flag)					{						//1.关闭弹层						this.dialogFormVisible4Edit = false;						this.$message.success(res.data.msg);					}					else					{						this.$message.error(res.data.msg);					}				}).finally(() => {                    //2.重新加载数据                    this.getAll();				});            },            // 弹出“删除”确认框            handleDelete(row) {                this.$confirm("此操作永久删除当前信息，是否继续？", "提示", {type: "info"}).then(() => {                    axios.delete("/comment/" + row.id).then((res) => {						if(res.data.flag){							this.$message.success(res.data.msg);						}						else{							this.$message.error(res.data.msg);						}					}).finally(() => {						//2.重新加载数据						this.getAll();					});				}).catch(() => {						this.$message.info("当前操作取消");				});            }		}	})</script></html>